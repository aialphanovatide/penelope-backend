services:
  server:
    build: .
    ports:
      - "5000:5000"
    environment:
      - FLASK_APP=${FLASK_APP:-run.py}
      - FLASK_ENV=${FLASK_ENV:-production}
      - DATABASE_URL=${DATABASE_URL}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PENELOPE_ASSISTANT_ID=${PENELOPE_ASSISTANT_ID}
      - COINGECKO_API_KEY=${COINGECKO_API_KEY}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

  db:
    image: postgres:16
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    command: >
      bash -c "
        echo 'PostgreSQL environment variables:' &&
        echo 'POSTGRES_USER: '${DB_USER} &&
        echo 'POSTGRES_DB: '${DB_NAME} &&
        echo 'Database directory contents:' &&
        ls -la /var/lib/postgresql/data &&
        docker-entrypoint.sh postgres
      " 
  
  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command:
      - "http"
      - "--domain=${NGROK_DOMAIN}"
      - "server:5000"
    ports:
      - "4040:4040"
  
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5051:80"
    depends_on:
      - db


volumes:
  postgres_data:
  pgadmin_data: